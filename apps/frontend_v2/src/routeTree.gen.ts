/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const LibraryIndexLazyImport = createFileRoute('/library/')()
const DecksIndexLazyImport = createFileRoute('/decks/')()
const BoardsIndexLazyImport = createFileRoute('/boards/')()
const DecksCreateIndexLazyImport = createFileRoute('/decks/create/')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const LibraryIndexLazyRoute = LibraryIndexLazyImport.update({
  id: '/library/',
  path: '/library/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/library/index.lazy').then((d) => d.Route))

const DecksIndexLazyRoute = DecksIndexLazyImport.update({
  id: '/decks/',
  path: '/decks/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/decks/index.lazy').then((d) => d.Route))

const BoardsIndexLazyRoute = BoardsIndexLazyImport.update({
  id: '/boards/',
  path: '/boards/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/boards/index.lazy').then((d) => d.Route))

const DecksCreateIndexLazyRoute = DecksCreateIndexLazyImport.update({
  id: '/decks/create/',
  path: '/decks/create/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/decks/create/index.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/boards/': {
      id: '/boards/'
      path: '/boards'
      fullPath: '/boards'
      preLoaderRoute: typeof BoardsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/decks/': {
      id: '/decks/'
      path: '/decks'
      fullPath: '/decks'
      preLoaderRoute: typeof DecksIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/library/': {
      id: '/library/'
      path: '/library'
      fullPath: '/library'
      preLoaderRoute: typeof LibraryIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/decks/create/': {
      id: '/decks/create/'
      path: '/decks/create'
      fullPath: '/decks/create'
      preLoaderRoute: typeof DecksCreateIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/boards': typeof BoardsIndexLazyRoute
  '/decks': typeof DecksIndexLazyRoute
  '/library': typeof LibraryIndexLazyRoute
  '/decks/create': typeof DecksCreateIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/boards': typeof BoardsIndexLazyRoute
  '/decks': typeof DecksIndexLazyRoute
  '/library': typeof LibraryIndexLazyRoute
  '/decks/create': typeof DecksCreateIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/boards/': typeof BoardsIndexLazyRoute
  '/decks/': typeof DecksIndexLazyRoute
  '/library/': typeof LibraryIndexLazyRoute
  '/decks/create/': typeof DecksCreateIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/boards' | '/decks' | '/library' | '/decks/create'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/boards' | '/decks' | '/library' | '/decks/create'
  id: '__root__' | '/' | '/boards/' | '/decks/' | '/library/' | '/decks/create/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  BoardsIndexLazyRoute: typeof BoardsIndexLazyRoute
  DecksIndexLazyRoute: typeof DecksIndexLazyRoute
  LibraryIndexLazyRoute: typeof LibraryIndexLazyRoute
  DecksCreateIndexLazyRoute: typeof DecksCreateIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  BoardsIndexLazyRoute: BoardsIndexLazyRoute,
  DecksIndexLazyRoute: DecksIndexLazyRoute,
  LibraryIndexLazyRoute: LibraryIndexLazyRoute,
  DecksCreateIndexLazyRoute: DecksCreateIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/boards/",
        "/decks/",
        "/library/",
        "/decks/create/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/boards/": {
      "filePath": "boards/index.lazy.tsx"
    },
    "/decks/": {
      "filePath": "decks/index.lazy.tsx"
    },
    "/library/": {
      "filePath": "library/index.lazy.tsx"
    },
    "/decks/create/": {
      "filePath": "decks/create/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
